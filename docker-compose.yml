services:
  kong:
    image: kong:3.4
    container_name: api_gateway
    restart: unless-stopped
    ports:
      - "8000:8000"   # HTTP-прокси
      - "8001:8001"   # Admin API
      - "8443:8443"   # HTTPS-прокси
      - "8444:8444"   # Admin API HTTPS
    environment:
      KONG_DATABASE: "off"  # Режим без БД (используем декларативную конфигурацию)
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    volumes:
      - ./kong:/etc/kong  # Папка с конфигурацией
    depends_on:
      - kong-migrations
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

  # Сервис для выполнения миграций Kong
  kong-migrations:
      image: kong:3.4
      command: "kong migrations bootstrap"
      environment:
        KONG_DATABASE: "off"
      volumes:
        - ./kong:/etc/kong
      restart: on-failure

  # Сервис для управления клиниками
  clinic_management_backend:
    build:
      context: ./packages/vet-app-clinic-management
      dockerfile: Dockerfile
    container_name: managment_backend
    ports:
      - "3002:8080" 
    depends_on:
       mysql:
        condition: service_healthy
       redis:
        condition: service_started
    environment:
      - MYSQL_DSN=root:password@tcp(mysql:3306)/clinic_db?charset=utf8mb4&parseTime=True&loc=Local
      - REDIS_ADDR=redis:6379

  # Сервис для MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: auth_db  
    ports:
      - "3306:3306"
    volumes:
      - ./packages/vet-app-clinic-management/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 5s
      timeout: 10s
      retries: 10
    command: 
      --bind-address=0.0.0.0        
      --default-authentication-plugin=mysql_native_password

  # Сервис для авторизации
  auth_backend:
    build:
      context: ./packages/vet-app-auth
      dockerfile: Dockerfile
    container_name: auth_backend
    restart: unless-stopped
    ports:
      - "3001:3000"  # Порт 3001 для этого сервиса
    environment:
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: password
      DB_NAME: auth_db
      JWT_SECRET: your_jwt_secret
      NODE_ENV: development
    depends_on:
      - mysql
    volumes:
      - ./packages/vet-app-auth:/usr/src/app

  # Redis сервис
  redis:
    image: redis:7.0
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Сервис для фронтенда
  frontend:
    build:
      context: ./apps/vet-app-frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    restart: unless-stopped
    ports:
      - "5173:80"
    environment:
      REACT_APP_API_URL: http://localhost:3000
    depends_on:
      - kong
    volumes:
      - ./apps/vet-app-frontend:/usr/src/app

volumes:
  mysql-data:
